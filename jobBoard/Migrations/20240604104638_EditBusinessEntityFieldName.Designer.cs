// <auto-generated />
using System;
using System.Collections.Generic;
using JobBoard.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobBoard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240604104638_EditBusinessEntityFieldName")]
    partial class EditBusinessEntityFieldName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_trgm");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobBoard.BusinessSizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("BusinessSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1-10"
                        },
                        new
                        {
                            Id = 2,
                            Name = "11-50"
                        },
                        new
                        {
                            Id = 3,
                            Name = "51-200"
                        },
                        new
                        {
                            Id = 4,
                            Name = "201-500"
                        },
                        new
                        {
                            Id = 5,
                            Name = "501-1000"
                        },
                        new
                        {
                            Id = 6,
                            Name = "1001-5000"
                        },
                        new
                        {
                            Id = 7,
                            Name = "5001-10000"
                        },
                        new
                        {
                            Id = 8,
                            Name = "10001+"
                        });
                });

            modelBuilder.Entity("JobBoard.Domain.Auth.ApplicationRoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd5b33d8-7e22-415c-ba12-4410567aa48b"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("71eb2644-23a2-4b6b-beb0-519cbca2cdf9"),
                            Name = "JobSeeker",
                            NormalizedName = "JOBSEEKER"
                        },
                        new
                        {
                            Id = new Guid("81146792-4235-4080-a186-0913966acccf"),
                            Name = "Business",
                            NormalizedName = "BUSINESS"
                        });
                });

            modelBuilder.Entity("JobBoard.Domain.Auth.ApplicationUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUserEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("JobBoard.Domain.Business.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("BusinessSizeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("StripeCustomerId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TwitterUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSizeId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Slug");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Engineering",
                            Slug = "engineering"
                        },
                        new
                        {
                            Id = 2,
                            Label = "R&D",
                            Slug = "r&d"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Q&A",
                            Slug = "q&a"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Sales",
                            Slug = "sales"
                        },
                        new
                        {
                            Id = 5,
                            Label = "Marketing",
                            Slug = "marketing"
                        },
                        new
                        {
                            Id = 6,
                            Label = "Human Resources",
                            Slug = "human-resources"
                        },
                        new
                        {
                            Id = 7,
                            Label = "Information Technology",
                            Slug = "information-technology"
                        },
                        new
                        {
                            Id = 8,
                            Label = "Finance",
                            Slug = "finance"
                        },
                        new
                        {
                            Id = 9,
                            Label = "Customer Support",
                            Slug = "customer-support"
                        },
                        new
                        {
                            Id = 10,
                            Label = "Product Management",
                            Slug = "product-management"
                        },
                        new
                        {
                            Id = 11,
                            Label = "Legal",
                            Slug = "legal"
                        },
                        new
                        {
                            Id = 12,
                            Label = "Technician",
                            Slug = "technician"
                        },
                        new
                        {
                            Id = 13,
                            Label = "Operations",
                            Slug = "operations"
                        },
                        new
                        {
                            Id = 14,
                            Label = "Other",
                            Slug = "other"
                        });
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.JobPostEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApplyUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid?>("BusinessId")
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CompanyLogoUrl")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaxSalary")
                        .HasColumnType("integer");

                    b.Property<int?>("MinSalary")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyName");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CompanyName"), "GIN");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("CompanyName"), new[] { "gin_trgm_ops" });

                    b.HasIndex("CountryId");

                    b.HasIndex("Description");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Description"), "GIN");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("Description"), new[] { "gin_trgm_ops" });

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("Tags");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Tags"), "GIN");

                    b.HasIndex("Title");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Title"), "GIN");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex("Title"), new[] { "gin_trgm_ops" });

                    b.ToTable("JobPosts");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.JobPostPaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CheckoutSessionId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobPostId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CheckoutSessionId")
                        .IsUnique();

                    b.HasIndex("JobPostId")
                        .IsUnique();

                    b.ToTable("JobPostPayments");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPostEntities.CountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Slug");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AF",
                            Label = "Afghanistan",
                            Slug = "afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Code = "AL",
                            Label = "Albania",
                            Slug = "albania"
                        },
                        new
                        {
                            Id = 3,
                            Code = "DZ",
                            Label = "Algeria",
                            Slug = "algeria"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AS",
                            Label = "American Samoa",
                            Slug = "american-samoa"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AD",
                            Label = "Andorra",
                            Slug = "andorra"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AO",
                            Label = "Angola",
                            Slug = "angola"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AI",
                            Label = "Anguilla",
                            Slug = "anguilla"
                        },
                        new
                        {
                            Id = 8,
                            Code = "AQ",
                            Label = "Antarctica",
                            Slug = "antarctica"
                        },
                        new
                        {
                            Id = 9,
                            Code = "AG",
                            Label = "Antigua and Barbuda",
                            Slug = "antigua-and-barbuda"
                        },
                        new
                        {
                            Id = 10,
                            Code = "AR",
                            Label = "Argentina",
                            Slug = "argentina"
                        },
                        new
                        {
                            Id = 11,
                            Code = "AM",
                            Label = "Armenia",
                            Slug = "armenia"
                        },
                        new
                        {
                            Id = 12,
                            Code = "AW",
                            Label = "Aruba",
                            Slug = "aruba"
                        },
                        new
                        {
                            Id = 13,
                            Code = "AP",
                            Label = "Asia/Pacific Region",
                            Slug = "asia/pacific-region"
                        },
                        new
                        {
                            Id = 14,
                            Code = "AU",
                            Label = "Australia",
                            Slug = "australia"
                        },
                        new
                        {
                            Id = 15,
                            Code = "AT",
                            Label = "Austria",
                            Slug = "austria"
                        },
                        new
                        {
                            Id = 16,
                            Code = "AZ",
                            Label = "Azerbaijan",
                            Slug = "azerbaijan"
                        },
                        new
                        {
                            Id = 17,
                            Code = "BS",
                            Label = "Bahamas",
                            Slug = "bahamas"
                        },
                        new
                        {
                            Id = 18,
                            Code = "BH",
                            Label = "Bahrain",
                            Slug = "bahrain"
                        },
                        new
                        {
                            Id = 19,
                            Code = "BD",
                            Label = "Bangladesh",
                            Slug = "bangladesh"
                        },
                        new
                        {
                            Id = 20,
                            Code = "BB",
                            Label = "Barbados",
                            Slug = "barbados"
                        },
                        new
                        {
                            Id = 21,
                            Code = "BY",
                            Label = "Belarus",
                            Slug = "belarus"
                        },
                        new
                        {
                            Id = 22,
                            Code = "BE",
                            Label = "Belgium",
                            Slug = "belgium"
                        },
                        new
                        {
                            Id = 23,
                            Code = "BZ",
                            Label = "Belize",
                            Slug = "belize"
                        },
                        new
                        {
                            Id = 24,
                            Code = "BJ",
                            Label = "Benin",
                            Slug = "benin"
                        },
                        new
                        {
                            Id = 25,
                            Code = "BM",
                            Label = "Bermuda",
                            Slug = "bermuda"
                        },
                        new
                        {
                            Id = 26,
                            Code = "BT",
                            Label = "Bhutan",
                            Slug = "bhutan"
                        },
                        new
                        {
                            Id = 27,
                            Code = "BO",
                            Label = "Bolivia",
                            Slug = "bolivia"
                        },
                        new
                        {
                            Id = 28,
                            Code = "BQ",
                            Label = "Bonaire, Sint Eustatius and Saba",
                            Slug = "bonaire,-sint-eustatius-and-saba"
                        },
                        new
                        {
                            Id = 29,
                            Code = "BA",
                            Label = "Bosnia and Herzegovina",
                            Slug = "bosnia-and-herzegovina"
                        },
                        new
                        {
                            Id = 30,
                            Code = "BW",
                            Label = "Botswana",
                            Slug = "botswana"
                        },
                        new
                        {
                            Id = 31,
                            Code = "BV",
                            Label = "Bouvet Island",
                            Slug = "bouvet-island"
                        },
                        new
                        {
                            Id = 32,
                            Code = "BR",
                            Label = "Brazil",
                            Slug = "brazil"
                        },
                        new
                        {
                            Id = 33,
                            Code = "IO",
                            Label = "British Indian Ocean Territory",
                            Slug = "british-indian-ocean-territory"
                        },
                        new
                        {
                            Id = 34,
                            Code = "BN",
                            Label = "Brunei Darussalam",
                            Slug = "brunei-darussalam"
                        },
                        new
                        {
                            Id = 35,
                            Code = "BG",
                            Label = "Bulgaria",
                            Slug = "bulgaria"
                        },
                        new
                        {
                            Id = 36,
                            Code = "BF",
                            Label = "Burkina Faso",
                            Slug = "burkina-faso"
                        },
                        new
                        {
                            Id = 37,
                            Code = "BI",
                            Label = "Burundi",
                            Slug = "burundi"
                        },
                        new
                        {
                            Id = 38,
                            Code = "KH",
                            Label = "Cambodia",
                            Slug = "cambodia"
                        },
                        new
                        {
                            Id = 39,
                            Code = "CM",
                            Label = "Cameroon",
                            Slug = "cameroon"
                        },
                        new
                        {
                            Id = 40,
                            Code = "CA",
                            Label = "Canada",
                            Slug = "canada"
                        },
                        new
                        {
                            Id = 41,
                            Code = "CV",
                            Label = "Cape Verde",
                            Slug = "cape-verde"
                        },
                        new
                        {
                            Id = 42,
                            Code = "KY",
                            Label = "Cayman Islands",
                            Slug = "cayman-islands"
                        },
                        new
                        {
                            Id = 43,
                            Code = "CF",
                            Label = "Central African Republic",
                            Slug = "central-african-republic"
                        },
                        new
                        {
                            Id = 44,
                            Code = "TD",
                            Label = "Chad",
                            Slug = "chad"
                        },
                        new
                        {
                            Id = 45,
                            Code = "CL",
                            Label = "Chile",
                            Slug = "chile"
                        },
                        new
                        {
                            Id = 46,
                            Code = "CN",
                            Label = "China",
                            Slug = "china"
                        },
                        new
                        {
                            Id = 47,
                            Code = "CX",
                            Label = "Christmas Island",
                            Slug = "christmas-island"
                        },
                        new
                        {
                            Id = 48,
                            Code = "CC",
                            Label = "Cocos (Keeling) Islands",
                            Slug = "cocos-(keeling)-islands"
                        },
                        new
                        {
                            Id = 49,
                            Code = "CO",
                            Label = "Colombia",
                            Slug = "colombia"
                        },
                        new
                        {
                            Id = 50,
                            Code = "KM",
                            Label = "Comoros",
                            Slug = "comoros"
                        },
                        new
                        {
                            Id = 51,
                            Code = "CG",
                            Label = "Congo",
                            Slug = "congo"
                        },
                        new
                        {
                            Id = 52,
                            Code = "CD",
                            Label = "Congo, The Democratic Republic of the",
                            Slug = "congo,-the-democratic-republic-of-the"
                        },
                        new
                        {
                            Id = 53,
                            Code = "CK",
                            Label = "Cook Islands",
                            Slug = "cook-islands"
                        },
                        new
                        {
                            Id = 54,
                            Code = "CR",
                            Label = "Costa Rica",
                            Slug = "costa-rica"
                        },
                        new
                        {
                            Id = 55,
                            Code = "HR",
                            Label = "Croatia",
                            Slug = "croatia"
                        },
                        new
                        {
                            Id = 56,
                            Code = "CU",
                            Label = "Cuba",
                            Slug = "cuba"
                        },
                        new
                        {
                            Id = 57,
                            Code = "CW",
                            Label = "Curaçao",
                            Slug = "curaçao"
                        },
                        new
                        {
                            Id = 58,
                            Code = "CY",
                            Label = "Cyprus",
                            Slug = "cyprus"
                        },
                        new
                        {
                            Id = 59,
                            Code = "CZ",
                            Label = "Czech Republic",
                            Slug = "czech-republic"
                        },
                        new
                        {
                            Id = 60,
                            Code = "CI",
                            Label = "Côte d'Ivoire",
                            Slug = "côte-d'ivoire"
                        },
                        new
                        {
                            Id = 61,
                            Code = "DK",
                            Label = "Denmark",
                            Slug = "denmark"
                        },
                        new
                        {
                            Id = 62,
                            Code = "DJ",
                            Label = "Djibouti",
                            Slug = "djibouti"
                        },
                        new
                        {
                            Id = 63,
                            Code = "DM",
                            Label = "Dominica",
                            Slug = "dominica"
                        },
                        new
                        {
                            Id = 64,
                            Code = "DO",
                            Label = "Dominican Republic",
                            Slug = "dominican-republic"
                        },
                        new
                        {
                            Id = 65,
                            Code = "EC",
                            Label = "Ecuador",
                            Slug = "ecuador"
                        },
                        new
                        {
                            Id = 66,
                            Code = "EG",
                            Label = "Egypt",
                            Slug = "egypt"
                        },
                        new
                        {
                            Id = 67,
                            Code = "SV",
                            Label = "El Salvador",
                            Slug = "el-salvador"
                        },
                        new
                        {
                            Id = 68,
                            Code = "GQ",
                            Label = "Equatorial Guinea",
                            Slug = "equatorial-guinea"
                        },
                        new
                        {
                            Id = 69,
                            Code = "ER",
                            Label = "Eritrea",
                            Slug = "eritrea"
                        },
                        new
                        {
                            Id = 70,
                            Code = "EE",
                            Label = "Estonia",
                            Slug = "estonia"
                        },
                        new
                        {
                            Id = 71,
                            Code = "ET",
                            Label = "Ethiopia",
                            Slug = "ethiopia"
                        },
                        new
                        {
                            Id = 72,
                            Code = "FK",
                            Label = "Falkland Islands (Malvinas)",
                            Slug = "falkland-islands-(malvinas)"
                        },
                        new
                        {
                            Id = 73,
                            Code = "FO",
                            Label = "Faroe Islands",
                            Slug = "faroe-islands"
                        },
                        new
                        {
                            Id = 74,
                            Code = "FJ",
                            Label = "Fiji",
                            Slug = "fiji"
                        },
                        new
                        {
                            Id = 75,
                            Code = "FI",
                            Label = "Finland",
                            Slug = "finland"
                        },
                        new
                        {
                            Id = 76,
                            Code = "FR",
                            Label = "France",
                            Slug = "france"
                        },
                        new
                        {
                            Id = 77,
                            Code = "GF",
                            Label = "French Guiana",
                            Slug = "french-guiana"
                        },
                        new
                        {
                            Id = 78,
                            Code = "PF",
                            Label = "French Polynesia",
                            Slug = "french-polynesia"
                        },
                        new
                        {
                            Id = 79,
                            Code = "TF",
                            Label = "French Southern Territories",
                            Slug = "french-southern-territories"
                        },
                        new
                        {
                            Id = 80,
                            Code = "GA",
                            Label = "Gabon",
                            Slug = "gabon"
                        },
                        new
                        {
                            Id = 81,
                            Code = "GM",
                            Label = "Gambia",
                            Slug = "gambia"
                        },
                        new
                        {
                            Id = 82,
                            Code = "GE",
                            Label = "Georgia",
                            Slug = "georgia"
                        },
                        new
                        {
                            Id = 83,
                            Code = "DE",
                            Label = "Germany",
                            Slug = "germany"
                        },
                        new
                        {
                            Id = 84,
                            Code = "GH",
                            Label = "Ghana",
                            Slug = "ghana"
                        },
                        new
                        {
                            Id = 85,
                            Code = "GI",
                            Label = "Gibraltar",
                            Slug = "gibraltar"
                        },
                        new
                        {
                            Id = 86,
                            Code = "GR",
                            Label = "Greece",
                            Slug = "greece"
                        },
                        new
                        {
                            Id = 87,
                            Code = "GL",
                            Label = "Greenland",
                            Slug = "greenland"
                        },
                        new
                        {
                            Id = 88,
                            Code = "GD",
                            Label = "Grenada",
                            Slug = "grenada"
                        },
                        new
                        {
                            Id = 89,
                            Code = "GP",
                            Label = "Guadeloupe",
                            Slug = "guadeloupe"
                        },
                        new
                        {
                            Id = 90,
                            Code = "GU",
                            Label = "Guam",
                            Slug = "guam"
                        },
                        new
                        {
                            Id = 91,
                            Code = "GT",
                            Label = "Guatemala",
                            Slug = "guatemala"
                        },
                        new
                        {
                            Id = 92,
                            Code = "GG",
                            Label = "Guernsey",
                            Slug = "guernsey"
                        },
                        new
                        {
                            Id = 93,
                            Code = "GN",
                            Label = "Guinea",
                            Slug = "guinea"
                        },
                        new
                        {
                            Id = 94,
                            Code = "GW",
                            Label = "Guinea-Bissau",
                            Slug = "guinea-bissau"
                        },
                        new
                        {
                            Id = 95,
                            Code = "GY",
                            Label = "Guyana",
                            Slug = "guyana"
                        },
                        new
                        {
                            Id = 96,
                            Code = "HT",
                            Label = "Haiti",
                            Slug = "haiti"
                        },
                        new
                        {
                            Id = 97,
                            Code = "HM",
                            Label = "Heard Island and Mcdonald Islands",
                            Slug = "heard-island-and-mcdonald-islands"
                        },
                        new
                        {
                            Id = 98,
                            Code = "VA",
                            Label = "Holy See (Vatican City State)",
                            Slug = "holy-see-(vatican-city-state)"
                        },
                        new
                        {
                            Id = 99,
                            Code = "HN",
                            Label = "Honduras",
                            Slug = "honduras"
                        },
                        new
                        {
                            Id = 100,
                            Code = "HK",
                            Label = "Hong Kong",
                            Slug = "hong-kong"
                        },
                        new
                        {
                            Id = 101,
                            Code = "HU",
                            Label = "Hungary",
                            Slug = "hungary"
                        },
                        new
                        {
                            Id = 102,
                            Code = "IS",
                            Label = "Iceland",
                            Slug = "iceland"
                        },
                        new
                        {
                            Id = 103,
                            Code = "IN",
                            Label = "India",
                            Slug = "india"
                        },
                        new
                        {
                            Id = 104,
                            Code = "ID",
                            Label = "Indonesia",
                            Slug = "indonesia"
                        },
                        new
                        {
                            Id = 105,
                            Code = "IR",
                            Label = "Iran, Islamic Republic Of",
                            Slug = "iran,-islamic-republic-of"
                        },
                        new
                        {
                            Id = 106,
                            Code = "IQ",
                            Label = "Iraq",
                            Slug = "iraq"
                        },
                        new
                        {
                            Id = 107,
                            Code = "IE",
                            Label = "Ireland",
                            Slug = "ireland"
                        },
                        new
                        {
                            Id = 108,
                            Code = "IM",
                            Label = "Isle of Man",
                            Slug = "isle-of-man"
                        },
                        new
                        {
                            Id = 109,
                            Code = "IL",
                            Label = "Israel",
                            Slug = "israel"
                        },
                        new
                        {
                            Id = 110,
                            Code = "IT",
                            Label = "Italy",
                            Slug = "italy"
                        },
                        new
                        {
                            Id = 111,
                            Code = "JM",
                            Label = "Jamaica",
                            Slug = "jamaica"
                        },
                        new
                        {
                            Id = 112,
                            Code = "JP",
                            Label = "Japan",
                            Slug = "japan"
                        },
                        new
                        {
                            Id = 113,
                            Code = "JE",
                            Label = "Jersey",
                            Slug = "jersey"
                        },
                        new
                        {
                            Id = 114,
                            Code = "JO",
                            Label = "Jordan",
                            Slug = "jordan"
                        },
                        new
                        {
                            Id = 115,
                            Code = "KZ",
                            Label = "Kazakhstan",
                            Slug = "kazakhstan"
                        },
                        new
                        {
                            Id = 116,
                            Code = "KE",
                            Label = "Kenya",
                            Slug = "kenya"
                        },
                        new
                        {
                            Id = 117,
                            Code = "KI",
                            Label = "Kiribati",
                            Slug = "kiribati"
                        },
                        new
                        {
                            Id = 118,
                            Code = "KR",
                            Label = "Korea, Republic of",
                            Slug = "korea,-republic-of"
                        },
                        new
                        {
                            Id = 119,
                            Code = "KW",
                            Label = "Kuwait",
                            Slug = "kuwait"
                        },
                        new
                        {
                            Id = 120,
                            Code = "KG",
                            Label = "Kyrgyzstan",
                            Slug = "kyrgyzstan"
                        },
                        new
                        {
                            Id = 121,
                            Code = "LA",
                            Label = "Laos",
                            Slug = "laos"
                        },
                        new
                        {
                            Id = 122,
                            Code = "LV",
                            Label = "Latvia",
                            Slug = "latvia"
                        },
                        new
                        {
                            Id = 123,
                            Code = "LB",
                            Label = "Lebanon",
                            Slug = "lebanon"
                        },
                        new
                        {
                            Id = 124,
                            Code = "LS",
                            Label = "Lesotho",
                            Slug = "lesotho"
                        },
                        new
                        {
                            Id = 125,
                            Code = "LR",
                            Label = "Liberia",
                            Slug = "liberia"
                        },
                        new
                        {
                            Id = 126,
                            Code = "LY",
                            Label = "Libyan Arab Jamahiriya",
                            Slug = "libyan-arab-jamahiriya"
                        },
                        new
                        {
                            Id = 127,
                            Code = "LI",
                            Label = "Liechtenstein",
                            Slug = "liechtenstein"
                        },
                        new
                        {
                            Id = 128,
                            Code = "LT",
                            Label = "Lithuania",
                            Slug = "lithuania"
                        },
                        new
                        {
                            Id = 129,
                            Code = "LU",
                            Label = "Luxembourg",
                            Slug = "luxembourg"
                        },
                        new
                        {
                            Id = 130,
                            Code = "MO",
                            Label = "Macao",
                            Slug = "macao"
                        },
                        new
                        {
                            Id = 131,
                            Code = "MG",
                            Label = "Madagascar",
                            Slug = "madagascar"
                        },
                        new
                        {
                            Id = 132,
                            Code = "MW",
                            Label = "Malawi",
                            Slug = "malawi"
                        },
                        new
                        {
                            Id = 133,
                            Code = "MY",
                            Label = "Malaysia",
                            Slug = "malaysia"
                        },
                        new
                        {
                            Id = 134,
                            Code = "MV",
                            Label = "Maldives",
                            Slug = "maldives"
                        },
                        new
                        {
                            Id = 135,
                            Code = "ML",
                            Label = "Mali",
                            Slug = "mali"
                        },
                        new
                        {
                            Id = 136,
                            Code = "MT",
                            Label = "Malta",
                            Slug = "malta"
                        },
                        new
                        {
                            Id = 137,
                            Code = "MH",
                            Label = "Marshall Islands",
                            Slug = "marshall-islands"
                        },
                        new
                        {
                            Id = 138,
                            Code = "MQ",
                            Label = "Martinique",
                            Slug = "martinique"
                        },
                        new
                        {
                            Id = 139,
                            Code = "MR",
                            Label = "Mauritania",
                            Slug = "mauritania"
                        },
                        new
                        {
                            Id = 140,
                            Code = "MU",
                            Label = "Mauritius",
                            Slug = "mauritius"
                        },
                        new
                        {
                            Id = 141,
                            Code = "YT",
                            Label = "Mayotte",
                            Slug = "mayotte"
                        },
                        new
                        {
                            Id = 142,
                            Code = "MX",
                            Label = "Mexico",
                            Slug = "mexico"
                        },
                        new
                        {
                            Id = 143,
                            Code = "FM",
                            Label = "Micronesia, Federated States of",
                            Slug = "micronesia,-federated-states-of"
                        },
                        new
                        {
                            Id = 144,
                            Code = "MD",
                            Label = "Moldova, Republic of",
                            Slug = "moldova,-republic-of"
                        },
                        new
                        {
                            Id = 145,
                            Code = "MC",
                            Label = "Monaco",
                            Slug = "monaco"
                        },
                        new
                        {
                            Id = 146,
                            Code = "MN",
                            Label = "Mongolia",
                            Slug = "mongolia"
                        },
                        new
                        {
                            Id = 147,
                            Code = "ME",
                            Label = "Montenegro",
                            Slug = "montenegro"
                        },
                        new
                        {
                            Id = 148,
                            Code = "MS",
                            Label = "Montserrat",
                            Slug = "montserrat"
                        },
                        new
                        {
                            Id = 149,
                            Code = "MA",
                            Label = "Morocco",
                            Slug = "morocco"
                        },
                        new
                        {
                            Id = 150,
                            Code = "MZ",
                            Label = "Mozambique",
                            Slug = "mozambique"
                        },
                        new
                        {
                            Id = 151,
                            Code = "MM",
                            Label = "Myanmar",
                            Slug = "myanmar"
                        },
                        new
                        {
                            Id = 152,
                            Code = "NA",
                            Label = "Namibia",
                            Slug = "namibia"
                        },
                        new
                        {
                            Id = 153,
                            Code = "NR",
                            Label = "Nauru",
                            Slug = "nauru"
                        },
                        new
                        {
                            Id = 154,
                            Code = "NP",
                            Label = "Nepal",
                            Slug = "nepal"
                        },
                        new
                        {
                            Id = 155,
                            Code = "NL",
                            Label = "Netherlands",
                            Slug = "netherlands"
                        },
                        new
                        {
                            Id = 156,
                            Code = "AN",
                            Label = "Netherlands Antilles",
                            Slug = "netherlands-antilles"
                        },
                        new
                        {
                            Id = 157,
                            Code = "NC",
                            Label = "New Caledonia",
                            Slug = "new-caledonia"
                        },
                        new
                        {
                            Id = 158,
                            Code = "NZ",
                            Label = "New Zealand",
                            Slug = "new-zealand"
                        },
                        new
                        {
                            Id = 159,
                            Code = "NI",
                            Label = "Nicaragua",
                            Slug = "nicaragua"
                        },
                        new
                        {
                            Id = 160,
                            Code = "NE",
                            Label = "Niger",
                            Slug = "niger"
                        },
                        new
                        {
                            Id = 161,
                            Code = "NG",
                            Label = "Nigeria",
                            Slug = "nigeria"
                        },
                        new
                        {
                            Id = 162,
                            Code = "NU",
                            Label = "Niue",
                            Slug = "niue"
                        },
                        new
                        {
                            Id = 163,
                            Code = "NF",
                            Label = "Norfolk Island",
                            Slug = "norfolk-island"
                        },
                        new
                        {
                            Id = 164,
                            Code = "KP",
                            Label = "North Korea",
                            Slug = "north-korea"
                        },
                        new
                        {
                            Id = 165,
                            Code = "MK",
                            Label = "North Macedonia",
                            Slug = "north-macedonia"
                        },
                        new
                        {
                            Id = 166,
                            Code = "MP",
                            Label = "Northern Mariana Islands",
                            Slug = "northern-mariana-islands"
                        },
                        new
                        {
                            Id = 167,
                            Code = "NO",
                            Label = "Norway",
                            Slug = "norway"
                        },
                        new
                        {
                            Id = 168,
                            Code = "OM",
                            Label = "Oman",
                            Slug = "oman"
                        },
                        new
                        {
                            Id = 169,
                            Code = "PK",
                            Label = "Pakistan",
                            Slug = "pakistan"
                        },
                        new
                        {
                            Id = 170,
                            Code = "PW",
                            Label = "Palau",
                            Slug = "palau"
                        },
                        new
                        {
                            Id = 171,
                            Code = "PS",
                            Label = "Palestinian Territory, Occupied",
                            Slug = "palestinian-territory,-occupied"
                        },
                        new
                        {
                            Id = 172,
                            Code = "PA",
                            Label = "Panama",
                            Slug = "panama"
                        },
                        new
                        {
                            Id = 173,
                            Code = "PG",
                            Label = "Papua New Guinea",
                            Slug = "papua-new-guinea"
                        },
                        new
                        {
                            Id = 174,
                            Code = "PY",
                            Label = "Paraguay",
                            Slug = "paraguay"
                        },
                        new
                        {
                            Id = 175,
                            Code = "PE",
                            Label = "Peru",
                            Slug = "peru"
                        },
                        new
                        {
                            Id = 176,
                            Code = "PH",
                            Label = "Philippines",
                            Slug = "philippines"
                        },
                        new
                        {
                            Id = 177,
                            Code = "PN",
                            Label = "Pitcairn Islands",
                            Slug = "pitcairn-islands"
                        },
                        new
                        {
                            Id = 178,
                            Code = "PL",
                            Label = "Poland",
                            Slug = "poland"
                        },
                        new
                        {
                            Id = 179,
                            Code = "PT",
                            Label = "Portugal",
                            Slug = "portugal"
                        },
                        new
                        {
                            Id = 180,
                            Code = "PR",
                            Label = "Puerto Rico",
                            Slug = "puerto-rico"
                        },
                        new
                        {
                            Id = 181,
                            Code = "QA",
                            Label = "Qatar",
                            Slug = "qatar"
                        },
                        new
                        {
                            Id = 182,
                            Code = "RE",
                            Label = "Reunion",
                            Slug = "reunion"
                        },
                        new
                        {
                            Id = 183,
                            Code = "RO",
                            Label = "Romania",
                            Slug = "romania"
                        },
                        new
                        {
                            Id = 184,
                            Code = "RU",
                            Label = "Russian Federation",
                            Slug = "russian-federation"
                        },
                        new
                        {
                            Id = 185,
                            Code = "RW",
                            Label = "Rwanda",
                            Slug = "rwanda"
                        },
                        new
                        {
                            Id = 186,
                            Code = "BL",
                            Label = "Saint Barthélemy",
                            Slug = "saint-barthélemy"
                        },
                        new
                        {
                            Id = 187,
                            Code = "SH",
                            Label = "Saint Helena",
                            Slug = "saint-helena"
                        },
                        new
                        {
                            Id = 188,
                            Code = "KN",
                            Label = "Saint Kitts and Nevis",
                            Slug = "saint-kitts-and-nevis"
                        },
                        new
                        {
                            Id = 189,
                            Code = "LC",
                            Label = "Saint Lucia",
                            Slug = "saint-lucia"
                        },
                        new
                        {
                            Id = 190,
                            Code = "MF",
                            Label = "Saint Martin",
                            Slug = "saint-martin"
                        },
                        new
                        {
                            Id = 191,
                            Code = "MF",
                            Label = "Saint Martin",
                            Slug = "saint-martin"
                        },
                        new
                        {
                            Id = 192,
                            Code = "PM",
                            Label = "Saint Pierre and Miquelon",
                            Slug = "saint-pierre-and-miquelon"
                        },
                        new
                        {
                            Id = 193,
                            Code = "VC",
                            Label = "Saint Vincent and the Grenadines",
                            Slug = "saint-vincent-and-the-grenadines"
                        },
                        new
                        {
                            Id = 194,
                            Code = "WS",
                            Label = "Samoa",
                            Slug = "samoa"
                        },
                        new
                        {
                            Id = 195,
                            Code = "SM",
                            Label = "San Marino",
                            Slug = "san-marino"
                        },
                        new
                        {
                            Id = 196,
                            Code = "ST",
                            Label = "Sao Tome and Principe",
                            Slug = "sao-tome-and-principe"
                        },
                        new
                        {
                            Id = 197,
                            Code = "SA",
                            Label = "Saudi Arabia",
                            Slug = "saudi-arabia"
                        },
                        new
                        {
                            Id = 198,
                            Code = "SN",
                            Label = "Senegal",
                            Slug = "senegal"
                        },
                        new
                        {
                            Id = 199,
                            Code = "RS",
                            Label = "Serbia",
                            Slug = "serbia"
                        },
                        new
                        {
                            Id = 200,
                            Code = "CS",
                            Label = "Serbia and Montenegro",
                            Slug = "serbia-and-montenegro"
                        },
                        new
                        {
                            Id = 201,
                            Code = "SC",
                            Label = "Seychelles",
                            Slug = "seychelles"
                        },
                        new
                        {
                            Id = 202,
                            Code = "SL",
                            Label = "Sierra Leone",
                            Slug = "sierra-leone"
                        },
                        new
                        {
                            Id = 203,
                            Code = "SG",
                            Label = "Singapore",
                            Slug = "singapore"
                        },
                        new
                        {
                            Id = 204,
                            Code = "SX",
                            Label = "Sint Maarten",
                            Slug = "sint-maarten"
                        },
                        new
                        {
                            Id = 205,
                            Code = "SK",
                            Label = "Slovakia",
                            Slug = "slovakia"
                        },
                        new
                        {
                            Id = 206,
                            Code = "SI",
                            Label = "Slovenia",
                            Slug = "slovenia"
                        },
                        new
                        {
                            Id = 207,
                            Code = "SB",
                            Label = "Solomon Islands",
                            Slug = "solomon-islands"
                        },
                        new
                        {
                            Id = 208,
                            Code = "SO",
                            Label = "Somalia",
                            Slug = "somalia"
                        },
                        new
                        {
                            Id = 209,
                            Code = "ZA",
                            Label = "South Africa",
                            Slug = "south-africa"
                        },
                        new
                        {
                            Id = 210,
                            Code = "GS",
                            Label = "South Georgia and the South Sandwich Islands",
                            Slug = "south-georgia-and-the-south-sandwich-islands"
                        },
                        new
                        {
                            Id = 211,
                            Code = "SS",
                            Label = "South Sudan",
                            Slug = "south-sudan"
                        },
                        new
                        {
                            Id = 212,
                            Code = "ES",
                            Label = "Spain",
                            Slug = "spain"
                        },
                        new
                        {
                            Id = 213,
                            Code = "LK",
                            Label = "Sri Lanka",
                            Slug = "sri-lanka"
                        },
                        new
                        {
                            Id = 214,
                            Code = "SD",
                            Label = "Sudan",
                            Slug = "sudan"
                        },
                        new
                        {
                            Id = 215,
                            Code = "SR",
                            Label = "Surilabel",
                            Slug = "surilabel"
                        },
                        new
                        {
                            Id = 216,
                            Code = "SJ",
                            Label = "Svalbard and Jan Mayen",
                            Slug = "svalbard-and-jan-mayen"
                        },
                        new
                        {
                            Id = 217,
                            Code = "SZ",
                            Label = "Swaziland",
                            Slug = "swaziland"
                        },
                        new
                        {
                            Id = 218,
                            Code = "SE",
                            Label = "Sweden",
                            Slug = "sweden"
                        },
                        new
                        {
                            Id = 219,
                            Code = "CH",
                            Label = "Switzerland",
                            Slug = "switzerland"
                        },
                        new
                        {
                            Id = 220,
                            Code = "SY",
                            Label = "Syrian Arab Republic",
                            Slug = "syrian-arab-republic"
                        },
                        new
                        {
                            Id = 221,
                            Code = "TW",
                            Label = "Taiwan",
                            Slug = "taiwan"
                        },
                        new
                        {
                            Id = 222,
                            Code = "TJ",
                            Label = "Tajikistan",
                            Slug = "tajikistan"
                        },
                        new
                        {
                            Id = 223,
                            Code = "TZ",
                            Label = "Tanzania, United Republic of",
                            Slug = "tanzania,-united-republic-of"
                        },
                        new
                        {
                            Id = 224,
                            Code = "TH",
                            Label = "Thailand",
                            Slug = "thailand"
                        },
                        new
                        {
                            Id = 225,
                            Code = "TL",
                            Label = "Timor-Leste",
                            Slug = "timor-leste"
                        },
                        new
                        {
                            Id = 226,
                            Code = "TG",
                            Label = "Togo",
                            Slug = "togo"
                        },
                        new
                        {
                            Id = 227,
                            Code = "TK",
                            Label = "Tokelau",
                            Slug = "tokelau"
                        },
                        new
                        {
                            Id = 228,
                            Code = "TO",
                            Label = "Tonga",
                            Slug = "tonga"
                        },
                        new
                        {
                            Id = 229,
                            Code = "TT",
                            Label = "Trinidad and Tobago",
                            Slug = "trinidad-and-tobago"
                        },
                        new
                        {
                            Id = 230,
                            Code = "TN",
                            Label = "Tunisia",
                            Slug = "tunisia"
                        },
                        new
                        {
                            Id = 231,
                            Code = "TR",
                            Label = "Turkey",
                            Slug = "turkey"
                        },
                        new
                        {
                            Id = 232,
                            Code = "TM",
                            Label = "Turkmenistan",
                            Slug = "turkmenistan"
                        },
                        new
                        {
                            Id = 233,
                            Code = "TC",
                            Label = "Turks and Caicos Islands",
                            Slug = "turks-and-caicos-islands"
                        },
                        new
                        {
                            Id = 234,
                            Code = "TV",
                            Label = "Tuvalu",
                            Slug = "tuvalu"
                        },
                        new
                        {
                            Id = 235,
                            Code = "UG",
                            Label = "Uganda",
                            Slug = "uganda"
                        },
                        new
                        {
                            Id = 236,
                            Code = "UA",
                            Label = "Ukraine",
                            Slug = "ukraine"
                        },
                        new
                        {
                            Id = 237,
                            Code = "AE",
                            Label = "United Arab Emirates",
                            Slug = "united-arab-emirates"
                        },
                        new
                        {
                            Id = 238,
                            Code = "GB",
                            Label = "United Kingdom",
                            Slug = "united-kingdom"
                        },
                        new
                        {
                            Id = 239,
                            Code = "US",
                            Label = "United States",
                            Slug = "united-states"
                        },
                        new
                        {
                            Id = 240,
                            Code = "UM",
                            Label = "United States Minor Outlying Islands",
                            Slug = "united-states-minor-outlying-islands"
                        },
                        new
                        {
                            Id = 241,
                            Code = "UY",
                            Label = "Uruguay",
                            Slug = "uruguay"
                        },
                        new
                        {
                            Id = 242,
                            Code = "UZ",
                            Label = "Uzbekistan",
                            Slug = "uzbekistan"
                        },
                        new
                        {
                            Id = 243,
                            Code = "VU",
                            Label = "Vanuatu",
                            Slug = "vanuatu"
                        },
                        new
                        {
                            Id = 244,
                            Code = "VE",
                            Label = "Venezuela",
                            Slug = "venezuela"
                        },
                        new
                        {
                            Id = 245,
                            Code = "VN",
                            Label = "Vietnam",
                            Slug = "vietnam"
                        },
                        new
                        {
                            Id = 246,
                            Code = "VG",
                            Label = "Virgin Islands, British",
                            Slug = "virgin-islands,-british"
                        },
                        new
                        {
                            Id = 247,
                            Code = "VI",
                            Label = "Virgin Islands, U.S.",
                            Slug = "virgin-islands,-u.s."
                        },
                        new
                        {
                            Id = 248,
                            Code = "WF",
                            Label = "Wallis and Futuna",
                            Slug = "wallis-and-futuna"
                        },
                        new
                        {
                            Id = 249,
                            Code = "EH",
                            Label = "Western Sahara",
                            Slug = "western-sahara"
                        },
                        new
                        {
                            Id = 250,
                            Code = "YE",
                            Label = "Yemen",
                            Slug = "yemen"
                        },
                        new
                        {
                            Id = 251,
                            Code = "ZM",
                            Label = "Zambia",
                            Slug = "zambia"
                        },
                        new
                        {
                            Id = 252,
                            Code = "ZW",
                            Label = "Zimbabwe",
                            Slug = "zimbabwe"
                        },
                        new
                        {
                            Id = 253,
                            Code = "AX",
                            Label = "Åland Islands",
                            Slug = "åland-islands"
                        });
                });

            modelBuilder.Entity("JobBoard.Domain.JobPostEntities.EmploymentTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Slug");

                    b.ToTable("EmploymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Full Time",
                            Slug = "full-time"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Part Time",
                            Slug = "part-time"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Contract",
                            Slug = "contract"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Internship",
                            Slug = "internship"
                        },
                        new
                        {
                            Id = 5,
                            Label = "Temporary",
                            Slug = "temporary"
                        });
                });

            modelBuilder.Entity("JobBoard.Domain.JobSeeker.JobSeekerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("JobSeekers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JobBoard.Domain.Business.BusinessUserEntity", b =>
                {
                    b.HasBaseType("JobBoard.Domain.Auth.ApplicationUserEntity");

                    b.HasDiscriminator().HasValue("BusinessUserEntity");
                });

            modelBuilder.Entity("JobBoard.Domain.JobSeeker.JobSeekerUserEntity", b =>
                {
                    b.HasBaseType("JobBoard.Domain.Auth.ApplicationUserEntity");

                    b.HasDiscriminator().HasValue("JobSeekerUserEntity");
                });

            modelBuilder.Entity("JobBoard.Domain.Business.BusinessEntity", b =>
                {
                    b.HasOne("JobBoard.BusinessSizeEntity", "BusinessSize")
                        .WithMany()
                        .HasForeignKey("BusinessSizeId");

                    b.HasOne("JobBoard.Domain.Business.BusinessUserEntity", "User")
                        .WithOne("Business")
                        .HasForeignKey("JobBoard.Domain.Business.BusinessEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessSize");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.JobPostEntity", b =>
                {
                    b.HasOne("JobBoard.Domain.Business.BusinessEntity", "Business")
                        .WithMany("JobPosts")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobBoard.Domain.JobPost.CategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobBoard.Domain.JobPostEntities.CountryEntity", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobBoard.Domain.JobPostEntities.EmploymentTypeEntity", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("EmploymentType");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.JobPostPaymentEntity", b =>
                {
                    b.HasOne("JobBoard.Domain.JobPost.JobPostEntity", "JobPostEntity")
                        .WithOne("Payment")
                        .HasForeignKey("JobBoard.Domain.JobPost.JobPostPaymentEntity", "JobPostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("JobPostEntity");
                });

            modelBuilder.Entity("JobBoard.Domain.JobSeeker.JobSeekerEntity", b =>
                {
                    b.HasOne("JobBoard.Domain.JobSeeker.JobSeekerUserEntity", "User")
                        .WithOne("JobSeeker")
                        .HasForeignKey("JobBoard.Domain.JobSeeker.JobSeekerEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("JobBoard.Domain.Auth.ApplicationRoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("JobBoard.Domain.Auth.ApplicationUserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("JobBoard.Domain.Auth.ApplicationUserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("JobBoard.Domain.Auth.ApplicationRoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobBoard.Domain.Auth.ApplicationUserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("JobBoard.Domain.Auth.ApplicationUserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobBoard.Domain.Business.BusinessEntity", b =>
                {
                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("JobBoard.Domain.JobPost.JobPostEntity", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("JobBoard.Domain.Business.BusinessUserEntity", b =>
                {
                    b.Navigation("Business");
                });

            modelBuilder.Entity("JobBoard.Domain.JobSeeker.JobSeekerUserEntity", b =>
                {
                    b.Navigation("JobSeeker");
                });
#pragma warning restore 612, 618
        }
    }
}
